---
title: "Optimierung der Preisstrategien bei Airbnb: Eine Analyse zur Maximierung der Einnahmen"
subtitle: "Eine datengetriebene Untersuchung der Faktoren, die zu höheren Buchungspreisen führen"
author: "Cedric Gisler & Jovan Pajic"
date: "31.05.2024"
execute:
  error: true
  echo: false
  message: false
  warning: false
format:
  ieee-pdf: default
editor: visual
bibliography: references.bib
---

```{=html}
<!--


Eda beschreibe welche für uns relevant sind und erfrosche diese daten. Methode von eda durchführen

Sichtbarkeit Codeblox:

Hide source code: echo=FALSE

Hide text output: results = FALSE

Hide messages: message=FALSE

Hide warning messages: warning=FALSE

Hide plots: fig.show='hide'

-->
```
# 1. Abstrakt

```{=html}
<!--

Document Abstract \[1pt\]

-   Does it provide a comprehensible glipse of the project? \[0.5pt\]

-   Is the outcome teased? \[0.5pt\]
-->
```
Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.

# 2. Einleitung (mit Forschungsfrage (d.h. Geschäftsfrage) am Ende)

In der heutigen, schnelllebigen Welt des Online-Tourismus spielen Plattformen wie Airbnb eine zentrale Rolle bei der Art und Weise, wie Menschen reisen und Unterkünfte buchen. Airbnb bietet eine Vielzahl von Unterkünften an, von einfachen Zimmern bis hin zu luxuriösen Villen. So vielfältig wie das Angebot sind auch die Vorlieben und Erwartungen der Gäste. Vor diesem Hintergrund stellt sich die Forschungsfrage: ***Welche Eigenschaften einer Airbnb-Unterkunft ziehen Gäste an und ermöglichen es, einen höheren Preis pro Apparment zu erzielen?***

Der grösste Unterschied eines Airbnbs ist deren Grösse. Eine der wichtigsten Eigenschaften eines Apartments ist aber die Lage, die Bewertung und der Gastgeber, somit definieren wir folgende Nullhypothesen:

1.  **Bewertung der Airbnb-Unterkünften:**

    -   **Nullhypothese (H0):** Die Höhe der Gesamtbewertung (review_scores_rating) hat keinen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
    -   **Alternativhypothese (H1):** Die Höhe der Gesamtbewertung (review_scores_rating) hat einen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
    -   **Fragen:**
        -   Hat die Gesamtbewertung der Unterkunft (review_scores_rating) einen signifikanten Einfluss auf den Preis pro Person?
        -   Gibt es bestimmte Bewertungsmetriken (z.B. Sauberkeit, Kommunikation), die den Preis pro Person stärker beeinflussen als andere?

2.  **Gastgeber der Airbnb-Unterkunft:**

    -   **Nullhypothese (H0):** Die Attribute des Hosts wie "host_is_superhost", "host_identity_verified" und "host_listings_count" haben keinen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
    -   **Alternativhypothese (H1):** Die Attribute des Hosts wie "host_is_superhost", "host_identity_verified" und "host_listings_count" haben einen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
    -   **Fragen:**
        -   Beeinflusst der Status "Superhost" (host_is_superhost) den Preis pro Person?

        -   Hat die Verifizierung des Hosts (host_identity_verified) einen Einfluss auf den Preis pro Person?

        -   Wie beeinflusst die Anzahl der Listings eines Hosts (host_listings_count) den Preis pro Person?

3.  **Lage des Airbnb:**

    -   **Nullhypothese (H0):** Die Entfernung zum Stadtzentrum (berechnet durch geografische Koordinaten) hat keinen signifikanten Einfluss auf den Preis pro Person der Unterkunft.

    -   **Alternativhypothese (H1):** Die Entfernung zum Stadtzentrum (berechnet durch geografische Koordinaten) hat einen signifikanten Einfluss auf den Preis pro Person der Unterkunft.

    -   **Fragen:**

        -   Beeinflusst die Entfernung zum Stadtzentrum den Preis pro Person der Unterkunft?
        -   Gibt es andere geografische Faktoren (z.B. Nähe zu bestimmten Attraktionen), die den Preis pro Person beeinflussen?

Weitere wichtige Eigenschaften sind Ereignisse (z.B. Zürich: Streetparade, Zürich Film Festival) in der betreffenden Stadt. Da wir aber die Daten nur zu einem einzelnen Zeitpunkt haben und keine Zeitserie, können wir den Einfluss dieser Ereignisse auf den Preis pro Person der Unterkunft nicht untersuchen.

**Deskriptive Analyse:** Wir möchten überprüfen, ob unsere Hypothesen so stimmen und wir mit unserer Annahme über die Einflüsse auf den Preis pro Person der Unterkunft richtig liegen.

**Prädiktive Analyse:** Wir möchten den Trend des Preises pro Person der Unterkunft aufzeigen und untersuchen, ob wir mithilfe der Bewertung und den wichtigsten Eigenschaften einer Unterkunft eine Prognose über den Preis machen können.

**Präskriptive Analyse:** Wir möchten zeigen, welche Eigenschaften wie verbessert werden müssen, um die Preise pro Person der Unterkunft signifikant erhöhen zu können, um einen höheren Preis erzielen zu können.

# 3. Datenquelle (mit Angaben zu Quelle, Qualität und Bereinigungsschritten der Daten)

Die Daten für diese Analyse stammen von der Inside Airbnb Organisation [@inside-airbnb-2023], die sich dafür einsetzt, ihre Gemeinden vor den negativen Auswirkungen von Kurzzeitvermietungen zu schützen. Diese Organisation sammelt und veröffentlicht regelmässig aktualisierte Datensätze, die aus öffentlich verfügbaren Informationen auf der Airbnb-Website stammen. Diese Datensätze würden wir als Vertrauenswürdig einstufen.

Die extrahierten Datensätze umfassen Informationen aus drei bedeutenden Regionen in der Schweiz: Zürich (27. Dezember 2023), Genénve (27. Dezember 2023) und Vaud (10. März 2024).

Die Daten umfassen verschiedene Dateien für jede Stadt, wobei für die Analyse hauptsächlich das "listings_long.csv"-File verwendet wird, da es für die Geschäftsfragen relevant ist. Die Qualität der Daten in diesem File ist insgesamt sehr hoch, mit wenigen leeren Feldern und einer konsistenten Struktur innerhalb der Spalten.

Es werden insgesamt 3 Datensätze verwendet, die dieselbe Struktur aufweisen, jedoch aus drei verschiedenen Regionen stammen, die wir hier analysieren möchten.

Einige Spalten, wie "description", "neighborhood_overview", "host_neighborhood", "neighborhood", und die Beschreibung der Liegenschaft, wie "bathrooms" und "bedrooms", weisen eine beträchtliche Anzahl leerer Felder auf. Es wird vermutet, dass diese Felder optional für die Gastgeber sind und daher nicht immer ausgefüllt werden. Ebenso fehlt bei einigen Einträgen der Preis, was eine Analyse erfordert, um mögliche Korrelationen mit anderen Feldern, wie dem ersten Review, zu identifizieren.

Trotz dieser kleinen Unregelmässigkeiten ist die Datenqualität insgesamt hoch, und die Beschreibung der Datenfelder wird durch das Data Dictionary [@inside-airbnb-2022] gut unterstützt.

**Datenbereinigungsschritte:**

1.  **Entfernung irrelevanter oder leerer Spalten:** Vor der Analyse wurden alle Spalten entfernt, die für die Fragestellungen nicht relevant sind oder leere Felder enthalten.

2.  **Überprüfung der Einheitlichkeit und Konsistenz der Werte:** Die verbleibenden Spalten wurden auf Einheitlichkeit der Werte und Konsistenz der "N/A"-Kennzeichnungen überprüft, um sicherzustellen, dass die Daten konsistent und interpretierbar sind.

3.  **Analyse von Einträgen ohne Preisangabe:** Einige Einträge weisen keine Preisangabe auf, was eine Analyse erfordert, um mögliche Korrelationen mit anderen Feldern, wie dem ersten Review, zu identifizieren. Je nach Ergebnis dieser Analyse könnten Einträge ohne Preisangabe entfernt oder anderweitig behandelt werden, um die Datenintegrität zu gewährleisten.

# 4. Datenqualität (Analyse im Hinblick auf Datenqualitätsaspekte)

```{r setup}
# load packages
library(readr)
library(dplyr)
library(ggplot2)
library(tidyr)
library(tidyverse)
library(broom)
library(caret)
library(randomForest)
library(knitr)
library(corrplot)
```

```{r import}
df_zuerich <- read_csv(here::here("dataSource/Zurich/listings_long.csv/listings.csv"), show_col_types = FALSE)

df_vaud <- read_csv(here::here("dataSource/Vaud/listings_long.csv/listings.csv"), show_col_types = FALSE)

df_geneva <- read_csv(here::here("dataSource/Geneva/listings_long.csv/listings.csv"), show_col_types = FALSE)
```

```{r, results="hide"}
#View(df_zuerich)
#str(df_zuerich)
#summary(df_zuerich)
```

Nachdem wir die Zusammenfassung der Daten betrachtet und eine Analyse der Datensätze durchgeführt haben, haben wir die folgenden Datenanpassungen vorgenommen:

1.  Konvertiere **`host_response_rate`** von Zeichenfolge (chr) in Ganzzahl (integer), wobei "N/A" durch NA ersetzt wird. Entferne das Prozentzeichen (%) und benenne die Spalte in **`host_response_rate_in_%`** um.

2.  Konvertiere **`host_acceptance_rate`** von Zeichenfolge (chr) in Ganzzahl (integer), wobei "N/A" durch NA ersetzt wird. Entferne das Prozentzeichen (%) und benenne die Spalte in **`host_acceptance_rate_in_%`** um.

3.  Konvertiere **`price`** von Zeichenfolge (chr) in Dezimalzahl (double), wobei das Dollarzeichen (\$) entfernt wird. Benenne die Spalte in **`price_in_$`** um.

4.  Lösche die folgenden Spalten: **`description`**, **`neighborhood_overview`**, **`host_location`**, **`host_about`**, **`host_neighbourhood`**, **`host_verifications`**, **`neighbourhood`**, **`neighbourhood_cleansed`**, **`bathrooms`**, **`bedrooms`**, **`amenities`**, **`calendar_updated`** , **`license`**.

5.  Analysiere fehlende Werte (NA) oder leere Felder und ersetze sie gegebenenfalls.

```{r data cleaning zuerich}

df_zuerich_cleaned <- df_zuerich %>%
  mutate(host_response_rate_in_percent = as.integer(gsub("%", "", na_if(host_response_rate, "N/A"))),
         host_acceptance_rate_in_percent = as.integer(gsub("%", "", na_if(host_acceptance_rate, "N/A"))),
         price_in_usd = as.numeric(ifelse(grepl("\\$[0-9.]+", price), gsub("\\$", "", price), "N/A"))
         ) %>%
  filter(!is.na(price_in_usd)) %>%
  select(-description, 
         -neighborhood_overview, 
         -host_location, 
         -host_about, 
         -host_neighbourhood, 
         -host_verifications,
         -host_acceptance_rate,
         -host_response_rate,
         -neighbourhood, 
         -neighbourhood_group_cleansed, 
         -bathrooms, 
         -bedrooms, 
         -amenities,
         -price,
         -calendar_updated,
         -license)

#Umwandeln der verschiedenen NA Werte in korrekte N/A Werte von R:
na_formats <- c("N/A", "n/a", "na", "NA")  # Alle möglichen NA-Formate
df_zuerich_cleaned <- df_zuerich_cleaned %>%
  mutate(across(everything(), ~ifelse(. %in% na_formats, NA, .)))
```

```{r data cleaning vaud}

df_vaud_cleaned <- df_vaud %>%
  mutate(host_response_rate_in_percent = as.integer(gsub("%", "", na_if(host_response_rate, "N/A"))),
         host_acceptance_rate_in_percent = as.integer(gsub("%", "", na_if(host_acceptance_rate, "N/A"))),
         price_in_usd = as.numeric(ifelse(grepl("\\$[0-9.]+", price), gsub("\\$", "", price), "N/A"))
         ) %>%
  filter(!is.na(price_in_usd)) %>%
  select(-description, 
         -neighborhood_overview, 
         -host_location, 
         -host_about, 
         -host_neighbourhood, 
         -host_verifications,
         -host_acceptance_rate,
         -host_response_rate,
         -neighbourhood, 
         -neighbourhood_group_cleansed, 
         -bathrooms, 
         -bedrooms, 
         -amenities,
         -price,
         -calendar_updated,
         -license)

#Umwandeln der verschiedenen NA Werte in korrekte N/A Werte von R:
na_formats <- c("N/A", "n/a", "na", "NA")  # Alle möglichen NA-Formate
df_vaud_cleaned <- df_vaud_cleaned %>%
  mutate(across(everything(), ~ifelse(. %in% na_formats, NA, .)))
```

```{r data cleaning geneva}

df_geneva_cleaned <- df_geneva %>%
  mutate(host_response_rate_in_percent = as.integer(gsub("%", "", na_if(host_response_rate, "N/A"))),
         host_acceptance_rate_in_percent = as.integer(gsub("%", "", na_if(host_acceptance_rate, "N/A"))),
         price_in_usd = as.numeric(ifelse(grepl("\\$[0-9.]+", price), gsub("\\$", "", price), "N/A"))
         ) %>%
  filter(!is.na(price_in_usd)) %>%
  select(-description, 
         -neighborhood_overview, 
         -host_location, 
         -host_about, 
         -host_neighbourhood, 
         -host_verifications,
         -host_acceptance_rate,
         -host_response_rate,
         -neighbourhood, 
         -neighbourhood_group_cleansed,
         -bathrooms, 
         -bedrooms, 
         -amenities,
         -price,
         -calendar_updated,
         -license)

#Umwandeln der verschiedenen NA Werte in korrekte N/A Werte von R:
na_formats <- c("N/A", "n/a", "na", "NA")  # Alle möglichen NA-Formate
df_geneva_cleaned <- df_geneva_cleaned %>%
  mutate(across(everything(), ~ifelse(. %in% na_formats, NA, .)))
```

```{r, results="hide"}
colnames(df_zuerich_cleaned)
```

Nach diesen Anpassungen haben wir die Daten weiter analysiert und die folgenden Schritte durchgeführt:

1.  **Überprüfung auf Duplikate:** Es wurde überprüft, ob es doppelte **`id`**s in den Daten gibt.

2.  **Visualisierung der Verteilungen:** Es wurden Histogramme erstellt, um die Verteilungen der Preise, der Bewertungsscores und der Bewertungen pro Monat zu visualisieren.

3.  **Analyse von Anomalien und Ausreissern:** Da der Preis stark variiert, analysieren wir die Möglichkeit, den Preis pro Person zu berechnen. Dabei fällt auf, dass der Preis bei "Entire home/apt" für die maximale Anzahl der Gäste (**`accommodates`**) berechnet wird, was sinnvoll ist, da die gesamte Unterkunft gebucht wird. Bei "Private room" und "Shared room" hingegen wird der Preis mehrheitlich pro Person angegeben. Im Gegensatz dazu ist der Preis bei "Hotel room" wieder für die maximale Gästeanzahl festgelegt.

4.  **Export der Datensätze:** Die drei bereinigten Datensätze wurden in neuen Dateien erstellt und abgespeichert.

```{r eda}

duplicated_ids <- df_zuerich_cleaned %>% 
  group_by(id)  %>% 
  filter(n() > 1)

ggplot(df_zuerich_cleaned, aes(x = price_in_usd)) +
  geom_histogram(binwidth = 10, fill = "skyblue", color = "black") +
  labs(title = "Verteilung des Preises in USD")

ggplot(df_zuerich_cleaned, aes(x = review_scores_rating)) +
  geom_histogram(binwidth = 0.25, fill = "lightgreen", color = "black") +
  labs(title = "Verteilung der Bewertung")

ggplot(df_zuerich_cleaned, aes(x = reviews_per_month)) +
  geom_histogram(binwidth = 1, fill = "orange", color = "black") +
  labs(title = "Verteilung von anzahl Bewertung pro Monat")


```

```{r, results=hide}
df_zuerich_cleaned %>%
  group_by(room_type) %>%
  summarise(count = n()) %>%
  arrange(desc(count)) %>%
  print()
```

```{r price_per_person}
df_geneva_cleaned <- df_geneva_cleaned %>%
  mutate(price_per_person = ifelse(room_type %in% c("Entire home/apt", "Hotel room"), 
                                   price_in_usd / accommodates, 
                                   price_in_usd)) %>%
  na.omit()

df_zuerich_cleaned <- df_zuerich_cleaned %>%
  mutate(price_per_person = ifelse(room_type %in% c("Entire home/apt", "Hotel room"), 
                                   price_in_usd / accommodates, 
                                   price_in_usd)) %>%
  na.omit()

df_vaud_cleaned <- df_vaud_cleaned %>%
  mutate(price_per_person = ifelse(room_type %in% c("Entire home/apt", "Hotel room"), 
                                   price_in_usd / accommodates, 
                                   price_in_usd)) %>%
  na.omit()
```

```{r eda price_per_person}
ggplot(df_zuerich_cleaned, aes(x = price_per_person)) +
  geom_histogram(binwidth = 10, fill = "yellow", color = "black") +
  labs(title = "Verteilung des Preises pro person in USD")
```

Die analysierten Werte zeigen eine ausgeglichene Verteilung ohne signifikante Ausreisser oder extreme Werte. Dies deutet darauf hin, dass der Datenbereinigungsprozess effektiv war und die Daten konsistent und zuverlässig für weitere Analysen vorliegen.

```{r, results = FALSE}
sum(is.na(df_zuerich_cleaned))
```

```{r export}
# Exportieren des DataFrames df_zuerich_cleaned, df_vaud_cleaned & df_geneva_cleaned in eine CSV-Datei
write.csv(df_zuerich_cleaned, "df_zuerich_cleaned.csv", row.names = FALSE)
write.csv(df_vaud_cleaned, "df_vaud_cleaned.csv", row.names = FALSE)
write.csv(df_geneva_cleaned, "df_geneva_cleaned.csv", row.names = FALSE)

```

# 5. Datenanalyse (Informationen zur Datenstruktur, Organisation und zu den für die Analyse verwendeten Methoden)

```{=html}
<!--

*Data analysis \[2pt\] Cedric / Jovan*

*Are data attributes clear and obvious discussed? \[1pt\]* -> dictonary

*Are adequate EDA methodologies used for data analysis? \[1pt\]* 

-->
```
## Datenstruktur und Organisation

Die vorliegenden bereinigten Datensets besteht aus Informationen zu Airbnb-Unterkünften in Zürich, Geneve und Vaud und umfasst 63 Variablen und mehrere tausend Zeilen, wobei jede Zeile eine einzelne Unterkunft repräsentiert. Die Variablen enthalten diverse Informationen, darunter:

-   **ID und URLs:** Eindeutige Identifikationsnummern und Links zu den Listings.

-   **Host-Informationen:** Daten über die Gastgeber, wie `host_id`, `host_name`, `host_is_superhost`, `host_identity_verified`, und `host_listings_count`.

-   **Eigenschaften der Unterkunft:** Variablen wie `accommodates`, `bedrooms`, `bathrooms`, `beds`, `price_in_usd`, und `price_per_person`.

-   **Bewertungen:** Bewertungsscores wie `review_scores_rating`, `review_scores_cleanliness`, `review_scores_checkin`, etc.

-   **Geografische Daten:** `latitude` und `longitude`.

-   **Verfügbarkeitsdaten:** `availability_30`, `availability_60`, `availability_90`, `availability_365`.

**Zusammenfassung Preis pro Person und Bewertung Zürich**

```{r}
summary(df_zuerich_cleaned$price_per_person)
summary(df_zuerich_cleaned$review_scores_rating)
```

**Zusammenfassung Preis pro Person und Bewertung Vaud**

```{r}
summary(df_vaud_cleaned$price_per_person)
summary(df_vaud_cleaned$review_scores_rating)
```

**Zusammenfassung Preis pro Person und Bewertung Genf**

```{r}
summary(df_geneva_cleaned$price_per_person)
summary(df_geneva_cleaned$review_scores_rating)
```

## Methoden der Datenanalyse

Um die Forschungsfragen zu beantworten und die Hypothesen zu testen, wurden verschiedene statistische Methoden und Verfahren angewendet:

### **Deskriptive Statistik**

Die deskriptive Statistik liefert grundlegende Informationen über die Struktur und Verteilung der Daten. Ziel ist es, einen Überblick über die Daten zu bekommen und mögliche Anomalien oder interessante Muster zu erkennen.

-   **Ziel:** Ein grundlegendes Verständnis der Datenstruktur und Verteilung der Variablen zu erlangen.

-   **Massnahmen:** Die verschiedenen Statistiken und die verschiedenen Attribute aufzeigen. Berechnung von Mittelwerten, Medianen und Standardabweichungen. Einfache Visualisierung der für die Fragen wichtigsten Attribute.

Kurze Übersicht über die Datensets Zürich, Vaud und Geneva

```{r descriptive zurich, results = FALSE}
# Deskriptive Statistik für numerische Variablen
summary(df_zuerich_cleaned$price_per_person)
summary(df_zuerich_cleaned$review_scores_rating)

# Histogramm für die Verteilung des Preises pro Person
ggplot(df_zuerich_cleaned, aes(x = price_per_person)) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Verteilung des Preises pro Person in Zürich", x = "Preis pro Person", y = "Häufigkeit")

# Boxplot für den Preis pro Person
ggplot(df_zuerich_cleaned, aes(y = price_per_person)) +
  geom_boxplot(fill = "orange", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Boxplot des Preises pro Person in Zürich", y = "Preis pro Person")

# Histogramm für die Verteilung der Bewertung
ggplot(df_zuerich_cleaned, aes(x = review_scores_rating)) +
  geom_histogram(binwidth = 1, fill = "green", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Verteilung der Bewertung in Zürich", x = "Bewertung", y = "Häufigkeit")

# Boxplot für die Bewertung
ggplot(df_zuerich_cleaned, aes(y = review_scores_rating)) +
  geom_boxplot(fill = "purple", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Boxplot der Bewertung in Zürich", y = "Bewertung")
```

```{r descriptive vaud, results = FALSE}
# Deskriptive Statistik für numerische Variablen
summary(df_vaud_cleaned$price_per_person)
summary(df_vaud_cleaned$review_scores_rating)

# Histogramm für die Verteilung des Preises pro Person
ggplot(df_vaud_cleaned, aes(x = price_per_person)) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Verteilung des Preises pro Person in Vaud", x = "Preis pro Person", y = "Häufigkeit")

# Boxplot für den Preis pro Person
ggplot(df_vaud_cleaned, aes(y = price_per_person)) +
  geom_boxplot(fill = "orange", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Boxplot des Preises pro Person in Vaud", y = "Preis pro Person")

# Histogramm für die Verteilung der Bewertung
ggplot(df_vaud_cleaned, aes(x = review_scores_rating)) +
  geom_histogram(binwidth = 1, fill = "green", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Verteilung der Bewertung in Vaud", x = "Bewertung", y = "Häufigkeit")

# Boxplot für die Bewertung
ggplot(df_vaud_cleaned, aes(y = review_scores_rating)) +
  geom_boxplot(fill = "purple", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Boxplot der Bewertung in Vaud", y = "Bewertung")
```

```{r descriptive geneva, results = FALSE}
# Deskriptive Statistik für numerische Variablen
summary(df_geneva_cleaned$price_per_person)
summary(df_geneva_cleaned$review_scores_rating)

# Histogramm für die Verteilung des Preises pro Person
ggplot(df_geneva_cleaned, aes(x = price_per_person)) +
  geom_histogram(binwidth = 10, fill = "blue", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Verteilung des Preises pro Person in Geneva", x = "Preis pro Person", y = "Häufigkeit")

# Boxplot für den Preis pro Person
ggplot(df_geneva_cleaned, aes(y = price_per_person)) +
  geom_boxplot(fill = "orange", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Boxplot des Preises pro Person in Geneva", y = "Preis pro Person")

# Histogramm für die Verteilung der Bewertung
ggplot(df_geneva_cleaned, aes(x = review_scores_rating)) +
  geom_histogram(binwidth = 1, fill = "green", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Verteilung der Bewertung in Geneva", x = "Bewertung", y = "Häufigkeit")

# Boxplot für die Bewertung
ggplot(df_zuerich_cleaned, aes(y = review_scores_rating)) +
  geom_boxplot(fill = "purple", color = "black", alpha = 0.7) +
  theme_minimal() +
  labs(title = "Boxplot der Bewertung in Geneva", y = "Bewertung")
```

### **Korrelationsanalyse**

Die Korrelationsanalyse untersucht die Stärke und Richtung der Beziehung zwischen verschiedenen numerischen Variablen. Pearson-Korrelationskoeffizienten wurden berechnet, um zu quantifizieren, wie stark zwei Variablen miteinander variieren.

-   **Ziel:** Identifikation von Zusammenhängen zwischen den Variablen, insbesondere zwischen den Bewertungen, Host-Informationen, geografischen Daten und dem Preis pro Person.

-   **Massnahmen:** Korrelationskoeffizienten berechnen und die Top 5 der positiven und negativen Korrelationen angeben.

```{r correlation, warning=FALSE}
calculate_correlations <- function(data) {
  # Filter für die jeweilige Stadt
  
  # Auswahl der numerischen Spalten
  numerical_columns <- data %>%
    select(where(is.numeric)) %>%
    colnames()
  
  # Berechnung der Korrelationsmatrix
  correlation_matrix <- cor(data %>% select(all_of(numerical_columns)), use = "complete.obs")
  
  # Extraktion der Korrelationen mit 'price_per_person'
  correlation_with_price_per_person <- correlation_matrix["price_per_person", ] %>%
    sort(decreasing = TRUE)
  
  # Umwandlung in DataFrame
  correlation_df <- data.frame(
    Variable = names(correlation_with_price_per_person),
    Correlation = correlation_with_price_per_person
  )
  
  # Auswahl der 5 höchsten und 5 niedrigsten Korrelationen
  top_5 <- correlation_df %>% head(6) # including 'price_per_person' itself
  bottom_5 <- correlation_df %>% tail(5)
  
  # Zusammenfügen der Ergebnisse
  result <- bind_rows(top_5, bottom_5) %>% 
    filter(Variable != "price_per_person")
  
  # Ausgabe der Ergebnisse
  return(result)
}

```

```{r, results='hide'}
#Korrelation für Zuerich
print("Zuerich Korrelation:")
print(calculate_correlations(df_zuerich_cleaned))
#Korrelation für Vaud
print("Vaud Korrelation:")
print(calculate_correlations(df_vaud_cleaned))
#Korrelation für Geneva
print("Genf Korrelation:")
print(calculate_correlations(df_geneva_cleaned))
```

### **Lineare Regression**

Die lineare Regression wurde verwendet, um die Beziehung zwischen einer abhängigen Variable (Preis pro Person) und einer oder mehreren unabhängigen Variablen zu modellieren. Dies hilft, die Auswirkungen der unabhängigen Variablen auf die abhängige Variable zu quantifizieren und Vorhersagen zu treffen.

-   **Ziel:** Untersuchung des Einflusses einzelner Variablen (z.B. Bewertungen, Host-Attribute, Entfernung zum Stadtzentrum) auf den Preis pro Person.

-   **Massnahmen:** Aufbau mehrerer linearer Regressionsmodelle, um den Einfluss spezifischer unabhängiger Variablen auf die abhängige Variable (Preis pro Person) zu analysieren.

```{r, results='hide'}
# Funktion zur Durchführung der linearen Regression
perform_regression <- function(data, formula) {
  # Lineares Regressionsmodell
  model <- lm(formula, data)
  
  # Zusammenfassen der Ergebnisse
  summary_model <- summary(model)
  tidy_model <- tidy(model)
  
  # Ausgabe der Ergebnisse
  list(
    summary = summary_model,
    tidy = tidy_model
  )
}

formulas <- list(
  "Bewertung" = price_per_person ~ review_scores_rating + review_scores_cleanliness + review_scores_communication,
  "Gastgeber" = price_per_person ~ host_is_superhost + host_identity_verified + host_listings_count,
  "Lage" = price_per_person ~ longitude + latitude
)

city_data_list <- list(
  "Zuerich" = df_zuerich_cleaned,
  "Vaud" = df_vaud_cleaned,
  "Geneva" = df_geneva_cleaned
)

for (city in names(city_data_list)){
  data = city_data_list[[city]]
  
  for (hypothesis in names(formulas)){
    cat("Lineare Regression für", city, "-", hypothesis, ":\n")
    regression_results <- perform_regression(data, formulas[[hypothesis]])
    cat("Zusammenfassung des Modells:\n")
    print(regression_results$summary)
  }
}


```

### **Visualisierung**

Verschiedene Arten von Plots wurden verwendet, um die Ergebnisse der deskriptiven Statistik, der Korrelationsanalyse und der Regressionsmodelle zu visualisieren.

-   **Ziel:** Verständliche Darstellung der Ergebnisse und Identifikation von Mustern in den Daten.

-   **Massnahmen:** Erstellung von Scatterplots, Boxplots und Aufzeigen der Regressionen zur Visualisierung der Beziehungen zwischen den Variablen.

```{r}
# Funktion zur Berechnung der Korrelationen
calculate_correlations <- function(data) {
  # Auswahl der numerischen Spalten
  numerical_columns <- data %>%
    select(where(is.numeric)) %>%
    colnames()
  
  # Berechnung der Korrelationsmatrix
  correlation_matrix <- cor(data %>% select(all_of(numerical_columns)), use = "complete.obs")
  
  # Extraktion der Korrelationen mit 'price_per_person'
  correlation_with_price_per_person <- correlation_matrix["price_per_person", ] %>%
    sort(decreasing = TRUE)
  
  # Umwandlung in DataFrame
  correlation_df <- data.frame(
    Variable = names(correlation_with_price_per_person),
    Correlation = correlation_with_price_per_person
  )
  
  # Ausgabe der Ergebnisse
  return(correlation_df %>% filter(Variable != "price_per_person"))
}

# Berechnung der Korrelationen für jede Stadt
zurich_cor <- calculate_correlations(df_zuerich_cleaned)
vaud_cor <- calculate_correlations(df_vaud_cleaned)
geneva_cor <- calculate_correlations(df_geneva_cleaned)

```

```{r}
# Funktion zur Erstellung eines Streudiagramms mit Regressionslinie
plot_regression <- function(data, x_var, y_var, title) {
  ggplot(data, aes_string(x = x_var, y = y_var)) +
    geom_point(alpha = 0.5) +
    geom_smooth(method = "lm", color = "blue") +
    theme_minimal() +
    labs(title = title, x = x_var, y = y_var)
}
```

### Predictive Analysis

Um prädiktive Analysen einzubeziehen, haben wir eine Vorhersagemodell entwickelt, um den erzielbaren Preis basierend auf bestimmten Merkmalen der Unterkünfte zu prognostizieren. Unser Ziel war es, den Trend des Preises pro Person der Unterkunft aufzuzeigen und zu untersuchen, ob wir mithilfe der Bewertung und den wichtigsten Eigenschaften einer Unterkunft eine Prognose über den Preis machen können. Dabei wurden die sechs besten Variablen mit der höchsten Korrelation im Modell verwendet.

\<!--

Are the applied methods goal orientated? \\\[2pt\\\] 4. Were the applied methods qualitatively performed? \\\[3pt\\\] 5. What are the conclusions of the findings? \\\[2pt\\\]

--\>

```{r predictive modell zurich}
# Setzen des Seeds für Reproduzierbarkeit
set.seed(123) 

# Aufteilung der Daten in Trainings- und Testdaten
trainIndex <- createDataPartition(df_zuerich_cleaned$price_per_person, p = .8,                                    list = FALSE,                                    times = 1) 
trainData <- df_zuerich_cleaned[trainIndex,]
testData <- df_zuerich_cleaned[-trainIndex,]  

# Training des Modells 
model <- randomForest(price_per_person ~ price_in_usd + calculated_host_listings_count_private_rooms + maximum_nights_avg_ntm  + availability_365 + host_total_listings_count + accommodates,                       data = trainData,                        ntree = 500)  

# Evaluierung des Modells 
predictions <- predict(model, testData) 
rmse <- sqrt(mean((predictions - testData$price_per_person)^2)) 
mae <- mean(abs(predictions - testData$price_per_person)) 
r2 <- 1 - sum((predictions - testData$price_per_person)^2) / sum((mean(testData$price_per_person) - testData$price_per_person)^2)  

# Ergebnisse anzeigen 
cat("RMSE:", rmse, "\n") 
cat("MAE:", mae, "\n") 
cat("R²:", r2, "\n")  

# Schlussfolgerungen 
importance <- importance(model) 
print(importance)
```

Die vorliegende Predictive Analyse zielt darauf ab, den Trend des Preises pro Person einer Unterkunft aufzuzeigen und zu untersuchen, ob mithilfe der Bewertung und den wichtigsten Eigenschaften einer Unterkunft eine Prognose über den Preis gemacht werden kann.

Die Modellbewertung zeigt folgende Ergebnisse:

-   **RMSE: 18.75538** – Der durchschnittliche quadratische Fehler beträgt 18.76 USD, was auf relativ geringe Abweichungen zwischen den vorhergesagten und tatsächlichen Preisen hinweist.

-   **MAE: 8.352074** – Der mittlere absolute Fehler beträgt 8.35 USD, was ebenfalls auf geringe Abweichungen hinweist.

-   **R²: 0.7960764** – Ein R²-Wert von 0.80 deutet darauf hin, dass das Modell die Variation des Preises pro Person gut erklärt und einen großen Teil der Variabilität im Preis vorhersagen kann.

Die Merkmalswichtigkeit zeigt, dass der Preis in USD (IncNodePurity = 1279516.0) der wichtigste Prädiktor ist, gefolgt von der Anzahl der privaten Zimmer in den Angeboten des Gastgebers (IncNodePurity = 416287.9) und der Anzahl der Personen, die die Unterkunft aufnehmen kann (IncNodePurity = 420585.7). Andere wichtige Merkmale sind die Verfügbarkeit über 365 Tage (IncNodePurity = 321470.4), die Gesamtanzahl der Angebote des Gastgebers (IncNodePurity = 234611.4), und die durchschnittliche maximale Aufenthaltsdauer (IncNodePurity = 188941.3). Dies zeigt, dass der Preis in USD, die Anzahl der privaten Zimmer, die Kapazität der Unterkunft und die Verfügbarkeit wesentliche Faktoren bei der Preisgestaltung sind.

```{r predictive modell vaud}
# Setzen des Seeds für Reproduzierbarkeit
set.seed(123) 

# Aufteilung der Daten in Trainings- und Testdaten
trainIndex <- createDataPartition(df_vaud_cleaned$price_per_person, p = .8,                                    list = FALSE,                                    times = 1) 
trainData <- df_vaud_cleaned[trainIndex,]
testData <- df_vaud_cleaned[-trainIndex,]  

# Training des Modells 
model <- randomForest(price_per_person ~ price_in_usd + calculated_host_listings_count_private_rooms + availability_90  + longitude + beds + accommodates,                       data = trainData,                        ntree = 500)  

# Evaluierung des Modells 
predictions <- predict(model, testData) 
rmse <- sqrt(mean((predictions - testData$price_per_person)^2)) 
mae <- mean(abs(predictions - testData$price_per_person)) 
r2 <- 1 - sum((predictions - testData$price_per_person)^2) / sum((mean(testData$price_per_person) - testData$price_per_person)^2)  

# Ergebnisse anzeigen 
cat("RMSE:", rmse, "\n") 
cat("MAE:", mae, "\n") 
cat("R²:", r2, "\n")  

# Schlussfolgerungen 
importance <- importance(model) 
print(importance)
```

Die Modellbewertung zeigt folgende Ergebnisse:

-   **RMSE: 15.67096** – Der durchschnittliche quadratische Fehler beträgt 15.67 USD, was auf relativ geringe Abweichungen zwischen den vorhergesagten und tatsächlichen Preisen hinweist.

-   **MAE: 6.181381** – Der mittlere absolute Fehler beträgt 6.18 USD, was ebenfalls auf geringe Abweichungen hinweist.

-   **R²: 0.7177398** – Ein R²-Wert von 0.72 deutet darauf hin, dass das Modell die Variation des Preises pro Person gut erklärt und einen großen Teil der Variabilität im Preis vorhersagen kann.

Die Merkmalswichtigkeit zeigt, dass der Preis in USD (IncNodePurity = 671102.83) der wichtigste Prädiktor ist, gefolgt von der Anzahl der privaten Zimmer in den Angeboten des Gastgebers (IncNodePurity = 231015.26) und der Kapazität der Unterkunft (IncNodePurity = 315227.40). Andere wichtige Merkmale sind die Verfügbarkeit über 90 Tage (IncNodePurity = 125946.08), die geographische Länge (IncNodePurity = 176045.99) und die Anzahl der Betten (IncNodePurity = 95966.35). Dies zeigt, dass der Preis in USD, die Anzahl der privaten Zimmer, die Kapazität der Unterkunft und die Verfügbarkeit wesentliche Faktoren bei der Preisgestaltung sind.

```{r predictive modell geneva}
# Setzen des Seeds für Reproduzierbarkeit
set.seed(123) 

# Aufteilung der Daten in Trainings- und Testdaten
trainIndex <- createDataPartition(df_geneva_cleaned$price_per_person, p = .8,                                    list = FALSE,                                    times = 1) 
trainData <- df_geneva_cleaned[trainIndex,]
testData <- df_geneva_cleaned[-trainIndex,]  

# Training des Modells 
model <- randomForest(price_per_person ~ price_in_usd + calculated_host_listings_count_private_rooms + availability_30   + availability_60  + availability_90 + accommodates,                       data = trainData,                        ntree = 500)  

# Evaluierung des Modells 
predictions <- predict(model, testData) 
rmse <- sqrt(mean((predictions - testData$price_per_person)^2)) 
mae <- mean(abs(predictions - testData$price_per_person)) 
r2 <- 1 - sum((predictions - testData$price_per_person)^2) / sum((mean(testData$price_per_person) - testData$price_per_person)^2)  

# Ergebnisse anzeigen 
cat("RMSE:", rmse, "\n") 
cat("MAE:", mae, "\n") 
cat("R²:", r2, "\n")  

# Schlussfolgerungen 
importance <- importance(model) 
print(importance)
```

Die Modellbewertung zeigt folgende Ergebnisse:

-   **RMSE: 29.24768** – Der durchschnittliche quadratische Fehler beträgt 29.25 USD, was auf moderate Abweichungen zwischen den vorhergesagten und tatsächlichen Preisen hinweist.

-   **MAE: 11.75992** – Der mittlere absolute Fehler beträgt 11.76 USD, was auf mittlere Abweichungen hinweist.

-   **R²: 0.5316072** – Ein R²-Wert von 0.53 deutet darauf hin, dass das Modell die Variation des Preises pro Person teilweise erklärt und etwa die Hälfte der Variabilität im Preis vorhersagen kann.

Die Merkmalswichtigkeit zeigt, dass der Preis in USD (IncNodePurity = 542561.0) der wichtigste Prädiktor ist, gefolgt von der Anzahl der privaten Zimmer in den Angeboten des Gastgebers (IncNodePurity = 214197.9) und der Kapazität der Unterkunft (IncNodePurity = 237664.3). Andere wichtige Merkmale sind die Verfügbarkeit über 30 Tage (IncNodePurity = 108033.9), 60 Tage (IncNodePurity = 115170.7) und 90 Tage (IncNodePurity = 106147.8). Dies zeigt, dass der Preis in USD, die Anzahl der privaten Zimmer, die Kapazität der Unterkunft und die Verfügbarkeit wesentliche Faktoren bei der Preisgestaltung sind.

Insgesamt zeigt die Analyse, dass die Modelle für Zürich und Vaud gut funktionieren, während das Modell für Genf noch Verbesserungspotenzial hat.

# 6. Ergebnisse (statistische Ergebnisse, Zahlen, Diagramme)

```{=html}
<!--

Conclusion \[3pt\]

-   Are the initial BI problems reasonably discussed/solved? \[2pt\]

-   Are the obtained new insights of the data sets of good quality? \[1pt\]
-->
```
## **Deskriptive Statistik**

## **Korrelationsanalyse**

### Zürich

-   **Positive Korrelationen:**

    -   **`price_in_usd` (0.4542):** Höherer Gesamtpreis → höherer Preis pro Person.
    -   **`calculated_host_listings_count_private_rooms` (0.2536):** Mehr private Zimmer → höherer Preis pro Person.
    -   **`maximum_maximum_nights` (0.1956) & `maximum_nights_avg_ntm` (0.1956):** Längere maximale Aufenthaltsdauer → höherer Preis pro Person.
    -   **`availability_365` (0.1922):** Ganzjährige Verfügbarkeit → höherer Preis pro Person.

-   **Negative Korrelationen:**

    -   **`host_listings_count` (-0.1772), `calculated_host_listings_count` (-0.1909), `host_total_listings_count` (-0.2006), `calculated_host_listings_count_entire_homes` (-0.2063):** Mehr Listings → niedrigerer Preis pro Person.
    -   **`accommodates` (-0.2531):** Mehr Plätze/Betten → niedrigerer Preis pro Person.

### Vaud

-   **Positive Korrelationen:**

    -   **`price_in_usd` (0.2369):** Höherer Gesamtpreis → höherer Preis pro Person.
    -   **`calculated_host_listings_count_private_rooms` (0.1654):** Mehr private Zimmer → höherer Preis pro Person.
    -   **`availability_90` (0.1133), `availability_365` (0.0997), `availability_30` (0.0891):** Höhere Verfügbarkeit → höherer Preis pro Person.

-   **Negative Korrelationen:**

    -   **`last_review` (-0.0820):** Länger zurückliegende letzte Bewertung → niedrigerer Preis pro Person.
    -   **`reviews_per_month` (-0.1043):** Mehr Bewertungen pro Monat → niedrigerer Preis pro Person.
    -   **`longitude` (-0.1349):** Östlichere Längengrade → niedrigerer Preis pro Person.
    -   **`beds` (-0.2090) & `accommodates` (-0.3130):** Mehr Betten/Plätze → niedrigerer Preis pro Person.

### Geneva

-   **Positive Korrelationen:**

    -   **`price_in_usd` (0.3902):** Höherer Gesamtpreis → höherer Preis pro Person.
    -   **`calculated_host_listings_count_private_rooms` (0.2662):** Mehr private Zimmer → höherer Preis pro Person.
    -   **`availability_30` (0.2246), `availability_60` (0.2184), `availability_90` (0.1991):** Höhere Verfügbarkeit → höherer Preis pro Person.

-   **Negative Korrelationen:**

    -   **`maximum_minimum_nights` (-0.0907):** Höhere minimale Aufenthaltsdauer → niedrigerer Preis pro Person.
    -   **`number_of_reviews_l30d` (-0.0957):** Mehr Bewertungen in den letzten 30 Tagen → niedrigerer Preis pro Person.
    -   **`minimum_maximum_nights` (-0.0966):** Höhere minimale maximale Aufenthaltsdauer → niedrigerer Preis pro Person.
    -   **`reviews_per_month` (-0.0976):** Mehr Bewertungen pro Monat → niedrigerer Preis pro Person.
    -   **`accommodates` (-0.2185):** Mehr Plätze/Betten → niedrigerer Preis pro Person.

### Gesamtschlussfolgerungen

Die Analyse der Korrelationen von `price_per_person` mit verschiedenen Variablen in den Städten Zürich, Vaud und Geneva liefert wertvolle Einblicke in die Faktoren, die den Preis pro Person beeinflussen. Hier sind die ausführlicheren Schlussfolgerungen:

-   **Höherer Gesamtpreis (`price_in_usd`)**: In allen drei Städten besteht ein positiver Zusammenhang zwischen dem Gesamtpreis und dem Preis pro Person. Das bedeutet, dass teurere Wohnungen auch mehr pro Person kosten. Dies ist intuitiv nachvollziehbar, da eine höhere Grundmiete oft auch zu höheren Kosten pro Person führt. Das bedeutet aber auch, dass man, wenn man mit einer grösseren Gruppe reist und eine grössere Unterkunft mietet, pro Person weniger zahlt.

-   **Mehr private Zimmer (`calculated_host_listings_count_private_rooms`)**: Ebenfalls in allen drei Städten korreliert die Anzahl der privaten Zimmer im Angebot des Hosts positiv mit dem Preis pro Person. Dies könnte darauf hinweisen, dass Hosts, die mehr private Zimmer anbieten, tendenziell höhere Preise verlangen, möglicherweise aufgrund der höheren Privatsphäre und Exklusivität.

-   **Kurzfristige und langfristige Verfügbarkeit**: In Geneva und Vaud zeigt die Verfügbarkeit der Unterkunft über verschiedene Zeiträume (30, 60, 90 Tage und das ganze Jahr) eine positive Korrelation mit dem Preis pro Person. Dies deutet darauf hin, dass Unterkünfte, die sowohl kurzfristig als auch langfristig verfügbar sind, tendenziell höher bepreist werden. Es könnte sein, dass diese Unterkünfte eine höhere Nachfrage bedienen oder flexiblere Buchungsoptionen bieten, die höher bewertet werden.

-   **Häufigkeit der Bewertungen (`reviews_per_month`, `number_of_reviews_l30d`)**: In Vaud und Geneva gibt es eine negative Korrelation zwischen der Anzahl der Bewertungen pro Monat und dem Preis pro Person. Dies könnte darauf hindeuten, dass Unterkünfte, die häufiger bewertet werden, tendenziell günstiger sind. Diese Unterkünfte könnten eine breitere Zielgruppe ansprechen, einschliesslich preisbewusster Reisender, was zu häufigeren Buchungen und somit zu mehr Bewertungen führt.

-   **Zeit seit der letzten Bewertung (`last_review`)**: In Vaud zeigt sich eine leichte negative Korrelation zwischen der Zeit seit der letzten Bewertung und dem Preis pro Person. Dies könnte darauf hinweisen, dass aktuellere Bewertungen mit höheren Preisen pro Person verbunden sind, möglicherweise weil aktuelle Bewertungen das Vertrauen und die Attraktivität der Unterkunft erhöhen.

-   **Anzahl der Listings (`host_listings_count`, `calculated_host_listings_count`, `host_total_listings_count`, `calculated_host_listings_count_entire_homes`)**: In Zürich zeigen mehrere Variablen, die die Anzahl der Listings des Hosts messen, eine negative Korrelation mit dem Preis pro Person. Dies deutet darauf hin, dass Hosts mit vielen Listings ihre Preise wettbewerbsfähiger gestalten müssen, um die Nachfrage zu halten. Grössere Host-Operationen könnten Skaleneffekte nutzen, um niedrigere Preise anzubieten.

-   **Anzahl der Betten und verfügbare Plätze (`beds`, `accommodates`)**: In allen drei Städten zeigen sich negative Korrelationen zwischen der Anzahl der Betten bzw. der verfügbaren Plätze und dem Preis pro Person. Dies weist darauf hin, dass grössere Unterkünfte tendenziell niedrigere Pro-Kopf-Kosten haben. Dies könnte auf Skaleneffekte oder die Notwendigkeit, grössere Gruppen anzuziehen, zurückzuführen sein.

-   **Geografische Koordinaten (`longitude`, `latitude`)**: In Vaud zeigt der Längengrad eine signifikante negative Korrelation mit dem Preis pro Person, was auf eine geografische Preisstruktur hindeuten könnte. Dies könnte bedeuten, dass östlichere Lagen tendenziell günstiger sind. In Zürich und Geneva sind die geografischen Koordinaten nicht signifikant.

## **Lineare Regression**

### Bewertung der Airbnb-Unterkünfte

**Hypothesen:**

-   Nullhypothese (H0): Die Höhe der Gesamtbewertung (review_scores_rating) hat keinen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
-   Alternativhypothese (H1): Die Höhe der Gesamtbewertung (review_scores_rating) hat einen signifikanten Einfluss auf den Preis pro Person der Unterkunft.

**Ergebnisse:**

**Zürich:**

-   `review_scores_rating`: Nicht signifikant (p = 0.9598)

-   `review_scores_cleanliness`: Signifikant (p = 0.0126) mit positivem Einfluss (Estimate = 12.9328)

-   `review_scores_communication`: Nicht signifikant (p = 0.5146)

-   **Interpretation:** Die Sauberkeitsbewertung beeinflusst den Preis pro Person positiv und signifikant, während die Gesamtbewertung und die Kommunikationsbewertung keinen signifikanten Einfluss haben.

**Vaud:**

-   `review_scores_rating`: Nicht signifikant (p = 0.6718)

-   `review_scores_cleanliness`: Signifikant (p = 3.40e-05) mit positivem Einfluss (Estimate = 8.596)

-   `review_scores_communication`: Signifikant (p = 0.0177) mit negativem Einfluss (Estimate = -5.619)

-   **Interpretation:** In Vaud hat die Sauberkeitsbewertung einen signifikanten positiven Einfluss, während die Kommunikationsbewertung einen signifikanten negativen Einfluss auf den Preis pro Person hat. Die Gesamtbewertung ist nicht signifikant.

**Geneva:**

-   `review_scores_rating`: Nicht signifikant (p = 0.1512)

-   `review_scores_cleanliness`: Signifikant (p = 0.0002) mit positivem Einfluss (Estimate = 14.473)

-   `review_scores_communication`: Grenzwertig signifikant (p = 0.0809) mit negativem Einfluss (Estimate = -6.894)

-   **Interpretation:** In Geneva hat die Sauberkeitsbewertung einen signifikanten positiven Einfluss auf den Preis pro Person, während die Gesamtbewertung keinen signifikanten Einfluss hat. Die Kommunikationsbewertung ist grenzwertig signifikant negativ.

### Gastgeber der Airbnb-Unterkunft

**Hypothesen:**

-   Nullhypothese (H0): Die Attribute des Hosts wie "host_is_superhost", "host_identity_verified" und "host_listings_count" haben keinen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
-   Alternativhypothese (H1): Die Attribute des Hosts wie "host_is_superhost", "host_identity_verified" und "host_listings_count" haben einen signifikanten Einfluss auf den Preis pro Person der Unterkunft.

**Ergebnisse:**

**Zürich:**

-   `host_is_superhost`: Grenzwertig signifikant (p = 0.0931)

-   `host_identity_verified`: Grenzwertig signifikant (p = 0.0611) mit negativem Einfluss (Estimate = -14.39683)

-   `host_listings_count`: Signifikant (p = 3.03e-10) mit negativem Einfluss (Estimate = -0.12963)

-   **Interpretation:** In Zürich hat die Anzahl der Listings eines Hosts einen signifikant negativen Einfluss auf den Preis pro Person. Der Status "Superhost" und die Verifizierung des Hosts sind grenzwertig signifikant.

**Vaud:**

-   `host_is_superhost`: Nicht signifikant (p = 0.8962)

-   `host_identity_verified`: Grenzwertig signifikant (p = 0.0927) mit negativem Einfluss (Estimate = -4.994676)

-   `host_listings_count`: Nicht signifikant (p = 0.4207)

-   **Interpretation:** In Vaud sind keine der Host-Attribute signifikant, jedoch ist die Verifizierung des Hosts grenzwertig signifikant negativ.

**Geneva:**

-   `host_is_superhost`: Nicht signifikant (p = 0.206)

-   `host_identity_verified`: Nicht signifikant (p = 0.281)

-   `host_listings_count`: Nicht signifikant (p = 0.533)

-   **Interpretation:** In Geneva haben die Host-Attribute keinen signifikanten Einfluss auf den Preis pro Person.

### Lage des Airbnb

**Hypothesen:**

-   Nullhypothese (H0): Die Entfernung zum Stadtzentrum (berechnet durch geografische Koordinaten) hat keinen signifikanten Einfluss auf den Preis pro Person der Unterkunft.
-   Alternativhypothese (H1): Die Entfernung zum Stadtzentrum (berechnet durch geografische Koordinaten) hat einen signifikanten Einfluss auf den Preis pro Person der Unterkunft.

**Ergebnisse:**

**Zürich:**

-   `longitude`: Nicht signifikant (p = 0.235)

-   `latitude`: Nicht signifikant (p = 0.159)

-   **Interpretation:** Die geografischen Koordinaten haben keinen signifikanten Einfluss auf den Preis pro Person in Zürich.

**Vaud:**

-   `longitude`: Signifikant (p = 2.05e-12) mit negativem Einfluss (Estimate = -16.129)

-   `latitude`: Nicht signifikant (p = 0.2062)

-   **Interpretation:** In Vaud hat der Längengrad einen signifikanten negativen Einfluss auf den Preis pro Person, während der Breitengrad keinen signifikanten Einfluss hat.

**Geneva:**

-   `longitude`: Nicht signifikant (p = 0.611)

-   `latitude`: Nicht signifikant (p = 0.396)

-   **Interpretation:** In Geneva haben die geografischen Koordinaten keinen signifikanten Einfluss auf den Preis pro Person.

## Zusammenfassung:

-   **Bewertung:** Die Sauberkeitsbewertung hat in allen Städten einen signifikanten positiven Einfluss auf den Preis pro Person. Die Gesamtbewertung hat keinen signifikanten Einfluss. Die Kommunikationsbewertung hat in Vaud einen signifikanten negativen Einfluss.
-   **Gastgeber:** In Zürich hat die Anzahl der Listings eines Hosts einen signifikant negativen Einfluss. In Vaud und Geneva sind die Host-Attribute nicht signifikant.
-   **Lage:** In Vaud hat der Längengrad einen signifikanten negativen Einfluss auf den Preis pro Person. In Zürich und Geneva haben die geografischen Koordinaten keinen signifikanten Einfluss.

## **Visualisierung**

Die folgenden Plots zeigen die Korrelationen des Preis pro Person (`price_per_person`) in den verschiedenen Städten. Anhand dieser Diagramme lässt sich leicht erkennen, dass einige Korrelationen viel stärker positiv oder negativ ausfallen. Diese starken Korrelationen sollten genauer untersucht werden, um ihre Ursachen und Auswirkungen besser zu verstehen.

```{r}
plot_correlations <- function(cor_df, title, num_top_bottom = 10) {
  cor_df <- bind_rows(head(cor_df, num_top_bottom), tail(cor_df, num_top_bottom))
  
  ggplot(cor_df, aes(x = reorder(Variable, Correlation), y = Correlation)) +
    geom_bar(stat = "identity", fill = "steelblue") +
    coord_flip() +
    theme_minimal() +
    labs(title = title, x = "Variable", y = "Korrelation")
}


# Erstellung der Plots
plot_zurich <- plot_correlations(zurich_cor, "Korrelationen mit price_per_person in Zürich")
plot_vaud <- plot_correlations(vaud_cor, "Korrelationen mit price_per_person in Vaud")
plot_geneva <- plot_correlations(geneva_cor, "Korrelationen mit price_per_person in Geneva")

# Anzeigen der Plots
print(plot_zurich)
print(plot_vaud)
print(plot_geneva)
```

### Lineare Regression für Zürich

```{r}
# Erstellung der Plots für Zürich - Bewertung
plot_zurich_rating <- plot_regression(df_zuerich_cleaned, "review_scores_rating", "price_per_person", "Lineare Regression für Zürich - Gesamtbewertung")
plot_zuerich_cleanliness <- plot_regression(df_zuerich_cleaned, "review_scores_cleanliness", "price_per_person", "Lineare Regression für Zürich - Sauberkeit")
plot_zuerich_communication <- plot_regression(df_zuerich_cleaned, "review_scores_communication", "price_per_person", "Lineare Regression für Zürich - Kommunikation")

# Erstellung der Plots für Zürich - Gastgeber
plot_zuerich_superhost <- plot_regression(df_zuerich_cleaned, "host_is_superhost", "price_per_person", "Lineare Regression für Zürich - Superhost")
plot_zuerich_identity_verified <- plot_regression(df_zuerich_cleaned, "host_identity_verified", "price_per_person", "Lineare Regression für Zürich - Identität verifiziert")
plot_zuerich_listings_count <- plot_regression(df_zuerich_cleaned, "host_listings_count", "price_per_person", "Lineare Regression für Zürich - Anzahl der Listings")

# Erstellung der Plots für Zürich - Lage
plot_zuerich_longitude <- plot_regression(df_zuerich_cleaned, "longitude", "price_per_person", "Lineare Regression für Zürich - Längengrad")
plot_zuerich_latitude <- plot_regression(df_zuerich_cleaned, "latitude", "price_per_person", "Lineare Regression für Zürich - Breitengrad")

# Anzeigen der Plots
print(plot_zurich_rating)
print(plot_zuerich_cleanliness)
print(plot_zuerich_communication)

print(plot_zuerich_superhost)
print(plot_zuerich_identity_verified)
print(plot_zuerich_listings_count)

print(plot_zuerich_longitude)
print(plot_zuerich_latitude)

```

### Lineare Regression für Vaud

```{r}
# Erstellung der Plots für Vaud - Bewertung
plot_vaud_rating <- plot_regression(df_vaud_cleaned, "review_scores_rating", "price_per_person", "Lineare Regression für Vaud - Gesamtbewertung")
plot_vaud_cleanliness <- plot_regression(df_vaud_cleaned, "review_scores_cleanliness", "price_per_person", "Lineare Regression für Vaud - Sauberkeit")
plot_vaud_communication <- plot_regression(df_vaud_cleaned, "review_scores_communication", "price_per_person", "Lineare Regression für Vaud - Kommunikation")

# Erstellung der Plots für Vaud - Gastgeber
plot_vaud_superhost <- plot_regression(df_vaud_cleaned, "host_is_superhost", "price_per_person", "Lineare Regression für Vaud - Superhost")
plot_vaud_identity_verified <- plot_regression(df_vaud_cleaned, "host_identity_verified", "price_per_person", "Lineare Regression für Vaud - Identität verifiziert")
plot_vaud_listings_count <- plot_regression(df_vaud_cleaned, "host_listings_count", "price_per_person", "Lineare Regression für Vaud - Anzahl der Listings")

# Erstellung der Plots für Vaud - Lage
plot_vaud_longitude <- plot_regression(df_vaud_cleaned, "longitude", "price_per_person", "Lineare Regression für Vaud - Längengrad")
plot_vaud_latitude <- plot_regression(df_vaud_cleaned, "latitude", "price_per_person", "Lineare Regression für Vaud - Breitengrad")

print(plot_vaud_rating)
print(plot_vaud_cleanliness)
print(plot_vaud_communication)

print(plot_vaud_superhost)
print(plot_vaud_identity_verified)
print(plot_vaud_listings_count)
```

### Lineare Regression für Geneva

```{r}
# Erstellung der Plots für Geneva - Bewertung
plot_geneva_rating <- plot_regression(df_geneva_cleaned, "review_scores_rating", "price_per_person", "Lineare Regression für Geneva - Gesamtbewertung")
plot_geneva_cleanliness <- plot_regression(df_geneva_cleaned, "review_scores_cleanliness", "price_per_person", "Lineare Regression für Geneva - Sauberkeit")
plot_geneva_communication <- plot_regression(df_geneva_cleaned, "review_scores_communication", "price_per_person", "Lineare Regression für Geneva - Kommunikation")

# Erstellung der Plots für Geneva - Gastgeber
plot_geneva_superhost <- plot_regression(df_geneva_cleaned, "host_is_superhost", "price_per_person", "Lineare Regression für Geneva - Superhost")
plot_geneva_identity_verified <- plot_regression(df_geneva_cleaned, "host_identity_verified", "price_per_person", "Lineare Regression für Geneva - Identität verifiziert")
plot_geneva_listings_count <- plot_regression(df_geneva_cleaned, "host_listings_count", "price_per_person", "Lineare Regression für Geneva - Anzahl der Listings")

# Erstellung der Plots für Geneva - Lage
plot_geneva_longitude <- plot_regression(df_geneva_cleaned, "longitude", "price_per_person", "Lineare Regression für Geneva - Längengrad")
plot_geneva_latitude <- plot_regression(df_geneva_cleaned, "latitude", "price_per_person", "Lineare Regression für Geneva - Breitengrad")

print(plot_geneva_rating)
print(plot_geneva_cleanliness)
print(plot_geneva_communication)

print(plot_geneva_superhost)
print(plot_geneva_identity_verified)
print(plot_geneva_listings_count)

print(plot_geneva_longitude)
print(plot_geneva_latitude)

```

### Schlussfolgerung

Die verschiedenen Grafiken und deren lineare Regressionen liefern interessante Einblicke in die Beziehung zwischen den untersuchten Variablen und dem Preis pro Person. Allerdings zeigen die Ergebnisse, dass viele der unabhängigen Variablen nur einen geringen Einfluss auf den Preis pro Person haben.

Zusammenfassend lässt sich sagen, dass die meisten untersuchten Variablen keinen starken Einfluss auf den Preis pro Person haben. Dies könnte darauf hindeuten, dass andere, nicht berücksichtigte Faktoren eine grössere Rolle spielen oder dass die Märkte in diesen Städten relativ homogen sind. Weitere Untersuchungen könnten sich auf zusätzliche Variablen oder nicht-lineare Modelle konzentrieren, um potenzielle Einflussfaktoren besser zu identifizieren.

## Predictive Analysis

Um prädiktive Analysen einzubeziehen, haben wir ein Vorhersagemodell entwickelt, um den erzielbaren Preis basierend auf bestimmten Merkmalen der Unterkünfte zu prognostizieren. Unser Ziel war es, den Trend des Preises pro Person der Unterkunft aufzuzeigen und zu untersuchen, ob wir mithilfe der Bewertung und den wichtigsten Eigenschaften einer Unterkunft eine Prognose über den Preis machen können. Dabei wurden die sechs besten Variablen mit der höchsten Korrelation im Modell verwendet.

**Zürich:**

-   **RMSE: 18.75538**

-   **MAE: 8.352074**

-   **R²: 0.7960764**

Die wichtigsten Prädiktoren sind der Preis in USD, die Anzahl der privaten Zimmer und die Kapazität der Unterkunft.

**Vaud:**

-   **RMSE: 15.67096**

-   **MAE: 6.181381**

-   **R²: 0.7177398**

Die wichtigsten Prädiktoren sind der Preis in USD, die Anzahl der privaten Zimmer und die Kapazität der Unterkunft.

**Genf:**

-   **RMSE: 29.24768**

-   **MAE: 11.75992**

-   **R²: 0.5316072**

Die wichtigsten Prädiktoren sind der Preis in USD, die Anzahl der privaten Zimmer und die Kapazität der Unterkunft.

Insgesamt zeigt die Analyse, dass die Modelle für Zürich und Vaud relativ gute Vorhersageergebnisse liefern, während das Modell für Genf eine deutlich geringere Genauigkeit aufweist und Verbesserungspotenzial hat.

# 7. Schlussfolgerung (Beantwortung der Frage)

```{=html}
<!--

#\| echo: false

The `echo: false` option disables the printing of code (only output is displayed).
-->
```
In diesem Kapitel fassen wir die wichtigsten Ergebnisse unserer Analyse zusammen und beantworten die eingangs gestellte Forschungsfrage: "Welche Eigenschaften einer Airbnb-Unterkunft ziehen Gäste an und ermöglichen es, einen höheren Preis pro Apartment zu erzielen?"

## Bewertung der Airbnb-Unterkünfte

Unsere Analyse zeigte, dass die Sauberkeitsbewertung (review_scores_cleanliness) einen signifikanten positiven Einfluss auf den Preis pro Person in allen drei untersuchten Städten (Zürich, Vaud und Genf) hat. Dies deutet darauf hin, dass Gäste bereit sind, mehr für Unterkünfte zu zahlen, die als besonders sauber bewertet wurden. Die Gesamtbewertung (review_scores_rating) und die Kommunikationsbewertung (review_scores_communication) hatten hingegen keinen einheitlich signifikanten Einfluss auf den Preis.

## Gastgeber der Airbnb-Unterkünfte

Die Untersuchung der Gastgebermerkmale ergab, dass in Zürich die Anzahl der Listings eines Hosts (host_listings_count) einen signifikant negativen Einfluss auf den Preis pro Person hat. Dies könnte darauf hindeuten, dass Gastgeber mit vielen Angeboten möglicherweise niedrigere Preise anbieten, um die Auslastung zu maximieren. Der Status als Superhost (host_is_superhost) und die Verifizierung des Hosts (host_identity_verified) hatten hingegen keinen konsistenten signifikanten Einfluss auf den Preis.

## Lage der Airbnb-Unterkünfte

Die geografische Analyse zeigte, dass in Vaud der Längengrad (longitude) einen signifikant negativen Einfluss auf den Preis pro Person hat. Dies könnte auf spezifische regionale Preisunterschiede hinweisen. In Zürich und Genf hatten die geografischen Koordinaten jedoch keinen signifikanten Einfluss auf den Preis.

## Predictive Analysis

Die prädiktive Analyse hat gezeigt, dass die entwickelten Modelle für Zürich und Vaud recht genaue Vorhersagen des Preises pro Person einer Unterkunft liefern. Die wichtigsten Prädiktoren in diesen Regionen sind der Preis in USD, die Anzahl der privaten Zimmer und die Kapazität der Unterkunft. Diese Faktoren spielen eine entscheidende Rolle bei der Preisgestaltung.

Das Modell für Genf hingegen weist eine geringere Genauigkeit auf, was auf größere Abweichungen zwischen den vorhergesagten und tatsächlichen Preisen hinweist. Dies deutet darauf hin, dass zusätzliche oder andere relevante Variablen identifiziert und in das Modell integriert werden müssen, um die Vorhersagegenauigkeit zu verbessern.

Zusammenfassend lässt sich sagen, dass die Modelle für Zürich und Vaud vielversprechend sind, während das Modell für Genf noch Verbesserungspotenzial hat. Zukünftige Analysen sollten sich darauf konzentrieren, die prädiktiven Variablen für Genf weiter zu untersuchen und zu optimieren.

## Empfehlungen für Gastgeber

Auf Basis unserer Ergebnisse können folgende Empfehlungen für Gastgeber abgeleitet werden, um den Preis pro Person ihrer Unterkünfte zu maximieren:

1.  **Sauberkeit verbessern**: Da die Sauberkeitsbewertung einen signifikanten Einfluss auf den Preis hat, sollten Gastgeber sicherstellen, dass ihre Unterkünfte stets sauber und gepflegt sind, um positive Bewertungen in diesem Bereich zu erhalten.

2.  **Anzahl der Listings optimieren**: Gastgeber mit vielen Listings sollten ihre Preisstrategie überprüfen und möglicherweise höhere Preise für besonders exklusive oder gut bewertete Unterkünfte festlegen.

3.  **Geografische Preisstrategien anwenden**: Insbesondere in Regionen wie Vaud sollten Gastgeber die lokale Preisstruktur berücksichtigen und ihre Preise entsprechend anpassen.

## Beantwortung der Forschungsfrage

Zusammenfassend lässt sich sagen, dass die Sauberkeitsbewertung einer Unterkunft, die Verfügbarkeit der Unterkunft und die Anzahl der Listings eines Hosts die wichtigsten Faktoren sind, die den Preis pro Person einer Airbnb-Unterkunft beeinflussen. Gastgeber sollten daher auf diese Merkmale achten, um ihre Einnahmen zu maximieren.

## Weiterführende Forschung

Für zukünftige Untersuchungen wäre es sinnvoll, zusätzliche Daten über längere Zeiträume zu sammeln, um den Einfluss saisonaler Ereignisse und Trends besser zu verstehen. Zudem könnten nicht-lineare Modelle oder maschinelle Lernverfahren eingesetzt werden, um die Komplexität der Einflussfaktoren besser abzubilden und genauere Vorhersagen zu ermöglichen.

# 8. Referenzen
